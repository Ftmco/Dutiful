// <auto-generated />
using System;
using Dutiful.DataBase.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Dutiful.DataBase.Migrations
{
    [DbContext(typeof(DutifulContext))]
    [Migration("20211208072734_Init")]
    partial class Init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder, 1L, 1);

            modelBuilder.Entity("Dutiful.Entity.Project.Card", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<short>("Type")
                        .HasColumnType("smallint");

                    b.Property<Guid>("WorkListId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("WorkListId");

                    b.ToTable("Card");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.Project", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid>("TeamId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("TeamId");

                    b.ToTable("Project");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.WorkList", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<DateTime>("CreateDate")
                        .HasColumnType("datetime2");

                    b.Property<Guid?>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("ProjectId");

                    b.ToTable("WorkList");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.WorkTask", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CardId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("Id");

                    b.HasIndex("CardId");

                    b.ToTable("WorkTask");
                });

            modelBuilder.Entity("Dutiful.Entity.Team.Team", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Image")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Team");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.Card", b =>
                {
                    b.HasOne("Dutiful.Entity.Project.WorkList", "WorkList")
                        .WithMany("Card")
                        .HasForeignKey("WorkListId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("WorkList");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.Project", b =>
                {
                    b.HasOne("Dutiful.Entity.Team.Team", "Team")
                        .WithMany("Project")
                        .HasForeignKey("TeamId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Team");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.WorkList", b =>
                {
                    b.HasOne("Dutiful.Entity.Project.Project", null)
                        .WithMany("WorkList")
                        .HasForeignKey("ProjectId");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.WorkTask", b =>
                {
                    b.HasOne("Dutiful.Entity.Project.Card", "Card")
                        .WithMany("WorkTask")
                        .HasForeignKey("CardId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Card");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.Card", b =>
                {
                    b.Navigation("WorkTask");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.Project", b =>
                {
                    b.Navigation("WorkList");
                });

            modelBuilder.Entity("Dutiful.Entity.Project.WorkList", b =>
                {
                    b.Navigation("Card");
                });

            modelBuilder.Entity("Dutiful.Entity.Team.Team", b =>
                {
                    b.Navigation("Project");
                });
#pragma warning restore 612, 618
        }
    }
}
